

/**
 * choose a grid width, the number of columns and the margin between columns.
 * the result of the following equation has to be an integer, not a fraction:
 * (width - (columns - 1) * col_margin) / columns = n
 * reformatted by Martin Wyatt
 * @author  http://bjorkoy.com/2010/05/css-grids-with-sass/
 */


/**
 * total with of page
 * @type {%}
 */
$grid-width: 100%;


/**
 * number of columns
 * @type {Number}
 */
$grid-total-columns: 12;


/**
 * margin between columns
 * @type {%}
 */
$grid-col-margin: 4%;


/**
 * maths
 * @type {int}
 */
$grid-col-width: ($grid-width - ($grid-col-margin * ($grid-total-columns - 1))) / $grid-total-columns;


/**
 * maths
 * @type {int}
 */
$grid-col-total-width: $grid-col-width + $grid-col-margin;  


/**
 * create row div
 */
@mixin row() {
	float: left;
	width: $grid-width;
	@include clearfix;
}


/**
 * create a column div
 * @type {int}
 */
@mixin col($n: 1) {
	float: left;
	@include span($n);
}


/**
 * make an element span n columns
 * @type {int}
 */
@mixin span($n: 1) {
	width: ($n * $grid-col-width) + (($n - 1) * $grid-col-margin);
	@if $n == $grid-total-columns {
		margin-right: 0;
	} @else {
		margin-right: $grid-col-margin;
	}
}


/**
 * the last column in a row needs this
 */
@mixin last() {
	margin-right: 0;
}


/**
 * prepend n blank columns
 * @type {int}
 */
@mixin prepend($n: 1) {
	margin-left: $grid-col-total-width * $n
}


/**
 * append n blank columns
 * @type {int}
 */
@mixin append($n: 1) {
	margin-right: $grid-col-total-width * $n + $grid-col-margin
}
