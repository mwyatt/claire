

/**
 * requirements
 * $font-family
 * palette
 */



/**
 * extend
 */
@import "mixin/grid";


/**
 * allows dynamic usage of media queries, here ranges of breakpoints
 * can be defined then refered to in a friendly way
 */
@mixin breakpoint($point) {
    @media all and (min-width: $point + px) { @content; }
}


/**
 * easy to define how text selection should display
 */
@mixin text-selection($color, $background) {
   $prefixes: ("-moz-", "-webkit-", "-o-", "-ms-", "");
   @each $prefix in $prefixes {
      ::#{$prefix}selection {
        color: $color;
        background: $background;
      }
   }
}


/**
 * a drop in grid which goes 2 col then 3 then 4
 */
@mixin gridSample() {

    @media all and (min-width: 600px) {
        margin-bottom: $gridColMargin;
    }
    
    @media all and (min-width: 600px) and (max-width: 859px) {
        @include col(6);

        &:nth-child(2n) {
            @include last;
        }
    }
    
    @media all and (min-width: 860px) and (max-width: 1199px) {
        @include col(4);

        &:nth-child(3n) {
            @include last;
        }
    }
    
    @media all and (min-width: 1200px) {
        @include col(3);

        &:nth-child(4n) {
            @include last;
        }
    }
}


@mixin dont-print() {

    @media print {
        display: none !important;
    }
}


@mixin button($color: white, $backgroundColor: black) {
    @include transition(background-color 100ms linear);
    font-weight: 600;
    cursor: pointer; 
    border: none;
    outline: none;
    cursor: pointer;
    text-align: center;
    line-height: 1;
    padding: 7px 10px;
    background-color: $backgroundColor;
    color: $color;

    &:hover {
        background-color: tint($backgroundColor, 20%);
    }

    &:active {
        background-color: shade($backgroundColor, 21%);
    }
}


@mixin link($color: blue) {
    @include linkContent($color);

    &:visited {
        @include linkContent($color);
    }
}


@mixin linkContent($color) {
    border-bottom-width: 1px;
    border-bottom-style: solid;
    color: $color;
    border-bottom-color: $color-white;

    &:hover { 
        color: shade($color, 20%);
        border-bottom-color: shade($color, 20%);
    }

    &:focus,
    &:active {
        color: shade($color, 50%);
        border-bottom-color: shade($color, 50%);
    }
}


@mixin input($type: 'text') {
    font-size: 1em;
    @include box-sizing(border-box);
    @include appearance(none);
    @include transition(all 200ms); 
    color: $color-text;
    font-family: $font-family;
    border: 1px solid $color-gray-30;
    padding: 0.4em 0.5em 0.3em;
    margin: 0;

    &:focus {
        box-shadow: 0 0 3px $color-gray-20;
        border-color: $color-gray-30;
        color: $color-text;
    }
}
